# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['GunicornLogger', 'TerminateProtected']

# %% ../nbs/00_core.ipynb 2
import signal
import logging
import subprocess
import time
from gunicorn.glogging import Logger as GLogger

# %% ../nbs/00_core.ipynb 3
class GunicornLogger(GLogger):
    def setup(self, cfg):
        super(GunicornLogger, self).setup(cfg)
        self.access_log = logging
        self.error_log = logging

class TerminateProtected:
    kill_now = False

    def __init__(self):
        signal.signal(signal.SIGINT, self.exit_gracefully)
        signal.signal(signal.SIGTERM, self.exit_gracefully)
        signal.signal(signal.SIGTSTP, self.exit_gracefully)

    def exit_gracefully(self, *args):
        logging.warning("Received SIGINT but executing anyway.")
        self.kill_now = True
